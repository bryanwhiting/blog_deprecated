<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Science on My take on data</title>
    <link>/categories/data-science/</link>
    <description>Recent content in Data Science on My take on data</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/data-science/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting the First Data Science Job</title>
      <link>/2018/07/getting-the-first-data-science-job/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/getting-the-first-data-science-job/</guid>
      <description>Last March, I wanted to break into the Data Science community but was struggling with confidence and starting to doubt I&amp;rsquo;d make it. I had been reading blog after blog about data science, practiced additional coding and learning new methods at night. And rejection after rejection, I wondered if I was on the right path. Now on the other side, hindsight is 20&amp;frasl;20.
I write this post to my past self, a person seeking for a job they couldn&amp;rsquo;t seem to get.</description>
    </item>
    
    <item>
      <title>Semantic Versioning for Data Science Models</title>
      <link>/2018/07/semantic-versioning-for-data-science-models/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/semantic-versioning-for-data-science-models/</guid>
      <description>If you’ve ever wanted to tag your data science model, you’ve probably wondered how to version it. Which will it be: vx.4.1, v34.1231.51.21, or v91.x4.dev34? After reading about semantic versioning, I propose a method for versioning data science models.
Semantic Versioning for Software Semantic versioning proposes the following:
 Given a version number MAJOR.MINOR.PATCH, increment the:
MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards-compatible manner, and PATCH version when you make backwards-compatible bug fixes.</description>
    </item>
    
  </channel>
</rss>